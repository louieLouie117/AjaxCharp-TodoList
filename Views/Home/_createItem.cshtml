@using AjaxCsharp.Models;
@model TodoList

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/style.css">
    <title>Dashboard</title>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {

            $.get("/displayTodoList", data => {
                RenderData(data);
            });

            $('#fetchData').click(function (event) {
                alert("fetcheing data...");
                LoadData();
            });

            $('#postForm').submit(function (event) {
                event.preventDefault();
                let BTNtext = document.getElementById("newItemBTN").value;
                console.log("button text:", BTNtext);


                let item = $('#Item').val();
                var jsonData = {
                    item: item,
                };

                let itemEditId = document.getElementById("itemBeingEditied").innerText;

                var jsonEditData = {
                    item: item,
                    todoListId: itemEditId,
                };


                console.log("new Item", jsonData);

                if (BTNtext === "Save") {
                    $.ajax({
                        url: '@Url.Action("EditItemHandler", "Home")',
                        type: "POST",
                        data: jsonEditData,
                        success: SuccessStatus,
                        error: ErrorStatus,
                        complete: CompleteStatus
                    });
                } else {
                    $.ajax({
                        url: '@Url.Action("NewItemHandler", "Home")',
                        type: "POST",
                        data: jsonData,
                        success: SuccessStatus,
                        error: ErrorStatus,
                        complete: CompleteStatus
                    });
                }

            });

            const SuccessStatus = (result) => {
                console.log("Success...", result);
                LoadData();
                document.getElementById("newItemBTN").value = "+";
                document.getElementById("newItemBTN").style.background = "Whitesmoke";
                document.getElementById("newItemBTN").style.color = "Black";
                document.getElementById("Item").value = "";
            };

            const ErrorStatus = (xhr, status, strErr) => {
                console.log("There was an error!");
            };

            const CompleteStatus = (xhr, status) => {
                console.log("Ajax has completed...");
            };

            const LoadData = () => {
                $('#userItems').load("/displayTodoList #userItems", data => {
                    data = JSON.parse(data);
                    console.log("in load", data);
                    RenderData(data);
                    @* data = $.parseJSON(data); deprecated*@
                });
            };

            const RenderData = (data) => {
                console.log("user Data", data.data)
                $.each(data.data, function (i, v) {
                    console.log(v)
                    let itemIndex = i;
                    let itemId = v.todoListId;
                    let itemTitle = v.item;
                    $(`<li id="${itemId}">
                         <p id="itemText${itemId}" > ${itemTitle}</p> 
                         @* <button $("#${itemId}").click(function(){alert("teting")" id="${itemId}">edit</button> *@
                         <button id="${itemId}" onclick="DeleteHandler(event)" >delete</button>
                         <button id="${itemId}" onclick="EditHandler(event)">Edit</button>
                    </li>`).appendTo("#userItems");
                    @* console.log(`id: ${itemId} index: ${itemIndex} item: ${itemTitle}`); *@

                });

            };


        });

        const EditHandler = (e) => {
            alert("edit button was click")
            document.getElementById("newItemBTN").value = "Save";
            document.getElementById("newItemBTN").style.background = "Blue";
            document.getElementById("newItemBTN").style.color = "white";



            console.log(e.target)
            let itemId = e.target.id;
            let itemNeeded = "itemText" + itemId
            console.log(itemNeeded)

            document.getElementById("itemBeingEditied").innerText = itemId;

            let itemText = document.getElementById(itemNeeded).innerText;
            console.log("text", itemText)
            document.getElementById("Item").value = itemText;

            document.getElementById(itemId).style.display = "none"



            const SuccessStatus = (result) => {
                console.log("Success...");
                LoadData();

            };

            const ErrorStatus = (xhr, status, strErr) => {
                console.log("There was an error!");
            };

            const CompleteStatus = (xhr, status) => {
                console.log("Ajax has completed...");
            };


            const LoadData = () => {
                $('#userItems').load("/displayTodoList #userItems", data => {
                    data = JSON.parse(data);
                    console.log("in load", data);
                    RenderData(data);
                    @* data = $.parseJSON(data); deprecated*@
                });
            };

            const RenderData = (data) => {
                console.log("user Data", data.data)
                $.each(data.data, function (i, v) {
                    console.log(v)
                    let itemIndex = i;
                    let itemId = v.todoListId;
                    let itemTitle = v.item;
                    $(`<li id="${itemId}">
                        <p id="itemText${itemId}" > ${itemTitle}</p> 
                         @* <button $("#${itemId}").click(function(){alert("teting")" id="${itemId}">edit</button> *@
                        <button id="${itemId}" onclick="DeleteHandler(event)" >delete</button>
                        <button id="${itemId}" onclick="EditHandler(event)">Edit</button>
                    </li>`).appendTo("#userItems");
                    @* console.log(`id: ${itemId} index: ${itemIndex} item: ${itemTitle}`); *@

                });
            };

        }



        const DeleteHandler = (e) => {
            console.log("id to select", e.target.id)

            let idSelected = e.target.id;

            $(`#${idSelected}`).click(function (e) {

                let itemId = e.target.id

                var jsonData = {
                    todoListId: itemId,
                };
                console.log("item id:", itemId)
                $.ajax({
                    url: '@Url.Action("DeleteHandler", "Home")',
                    type: "GET",
                    data: jsonData,
                    success: SuccessStatus,
                    error: ErrorStatus,
                    complete: CompleteStatus
                });
            })

            const SuccessStatus = (result) => {
                console.log("Success...");
                LoadData();
            };

            const ErrorStatus = (xhr, status, strErr) => {
                console.log("There was an error!");
            };

            const CompleteStatus = (xhr, status) => {
                console.log("Ajax has completed...");
            };

            const LoadData = () => {
                $('#userItems').load("/displayTodoList #userItems", data => {
                    data = JSON.parse(data);
                    console.log("in load", data);
                    RenderData(data);
                    @* data = $.parseJSON(data); deprecated*@
                });
            };

            const RenderData = (data) => {
                console.log("user Data", data.data)
                $.each(data.data, function (i, v) {
                    console.log(v)
                    let itemIndex = i;
                    let itemId = v.todoListId;
                    let itemTitle = v.item;
                    $(`<li id="${itemId}">
                        <p id="itemText${itemId}" > ${itemTitle}</p> 
                         @* <button $("#${itemId}").click(function(){alert("teting")" id="${itemId}">edit</button> *@
                         <button onclick="DeleteHandler(event)" id="${itemId}">delete</button>
                         <button id="${itemId}">Edit</button>
                    </li>`).appendTo("#userItems");
                    @* console.log(`id: ${itemId} index: ${itemIndex} item: ${itemTitle}`); *@

                });

            };


        }
    </script>

</head>

<body>
    <div class="dashboardHeader_container">
        <h1>Welcome @ViewBag.ToDisplay.FirstName, to Ajax C# todolist app</h1>
        <a href="/logout"> logout</a>
    </div>



    <div class="form-postContainer">
        <main>
            <form id="postForm" asp-action='postSale' method='POST' asp-controller='Home'>
                <label id="itemBeingEditied"></label>
                <input asp-for='Item' type='text' placeholder='New Item:'>

                @* <button type="button" id="submitForm">test ajax</button> *@


                <input id="newItemBTN" type="submit" value="+">

            </form>


        </main>

        <button id="fetchData">Fetch Data</button>


    </div>



    @* <h1>My Todo List with viewbag</h1>

        <ul>
        @foreach (var item in @ViewBag.TodoListItems)
        {
        <li>@item.Item</li>
        }
        </ul> *@


    <h1>My Todo List with Ajax</h1>

    <ul id="userItems">

    </ul>

</body>

</html>