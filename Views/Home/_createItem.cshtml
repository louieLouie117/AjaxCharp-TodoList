@using AjaxCsharp.Models;
@model TodoList

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/style.css">
    <title>Dashboard</title>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {

            $('#postForm').submit(function (event) {
                event.preventDefault();
                alert('button test ajax was click')

                let item = $('#Item').val()

                var jsonData = {
                    item: item,
                }
                console.log("new Item", jsonData)

                $.ajax({
                    url: '@Url.Action("NewItemHandler", "Home")',
                    type: "POST",
                    data: jsonData,
                    success: successFN,
                    error: errorFN,
                })

            })


            function successFN(result) {
                console.log("setting results")
                $('#userItems').load("/displayTodoList #userItems", data => {

                    @* data = $.parseJSON(data); *@
                        data = JSON.parse(data);


                    console.log("in load", data)
                    FetchData(data);

                })
            }

            function errorFN(xhr, status, strErr) {
                console.log("There was an error!")
            }




            $.get("/displayTodoList", data => {
                PopulatePage(data);
            })

            function PopulatePage(data) {
                console.log("user Data", data.data)
                $.each(data.data, function (id, v) {
                    @* console.log(`index: ${id}`) *@
                        @* console.log(` value:`, v) *@

                        let itemIndex = id;
                    let itemId = v.todoListId;
                    let itemTitle = v.item;


                    console.log(`id: ${itemId} index: ${itemIndex} item: ${itemTitle}`);

                    $("#userItems").append(`<li id="${itemId}"> ${itemIndex} ${itemTitle} </li>`);

                    return itemId;



                });

            };



            $('#fetchData').click(function (event) {
                alert("fetcheing data...")
                event.preventDefault();

                $('#userItems').load("/displayTodoList #userItems", data => {

                    @* data = $.parseJSON(data); *@
                        data = JSON.parse(data);

                    console.log("in load", data)
                    FetchData(data);

                })

            })

            function FetchData(data) {
                console.log("user Data", data.data)

                $.each(data.data, function (i, v) {
                    @* console.log(v.item) *@

                        let itemIndex = i;
                    let itemId = v.todoListId;
                    let itemTitle = v.item;



                    console.log(`id: ${itemId} index: ${itemIndex} item: ${itemTitle}`);
                    @* $("#userItems").append(`<li id="item${itemId}"> ${itemIndex} ${itemTitle} </li>`); *@
                        $(`<li id="item${itemId}"> ${itemIndex} ${itemTitle} </li>`).appendTo("#userItems");




                })



            };




            @* end *@
        })
    </script>
</head>

<body>
    <div class="dashboardHeader_container">
        <h1>Welcome @ViewBag.ToDisplay.FirstName, to Ajax C# todolist app</h1>
        <a href="/logout"> logout</a>
    </div>



    <div class="form-postContainer">
        <main>
            <form id="postForm" asp-action='postSale' method='POST' asp-controller='Home'>
                <input asp-for='Item' type='text' placeholder='New Item:'>

                @* <button type="button" id="submitForm">test ajax</button> *@

                <input type="submit" value="+">
            </form>


        </main>

    </div>

    <button id="fetchData">Fetch Data</button>


    @* <h1>My Todo List with viewbag</h1>

        <ul>
        @foreach (var item in @ViewBag.TodoListItems)
        {
        <li>@item.Item</li>
        }
        </ul> *@


    <h1>My Todo List with Ajax</h1>

    <ul id="userItems">

    </ul>

</body>

</html>